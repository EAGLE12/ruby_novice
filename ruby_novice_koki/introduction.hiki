!序論
!!目的

Rubyは本格的なオブジェクト指向プログラムが記述できる汎用性の高い日本発のオープンソースである．Rubyは初心者に分かり易く,プログラム教育にもスムーズに活用できるメリットがある[1].

西谷研究室に在籍している学生は，Rubyプログラミングを修得するために初心者向けの問題集を使って学習している．
さらに，進捗状況の管理や指導者からの添削をより容易におこなえるように改善するため，バージョン管理ソフトGitHubを利用するシステム(ruby_novice)を開発している
そこでは，Rubyプログラミングで重要となるテスト駆動をおこなえる環境を提供している．これにより，学習者自身が出力チェックできるようにしRubyプログラミングにおけるテスト実行に自然と慣れるような学習形態を目指している．
本研究はRuby初心者が文法だけでなく，Rubyプログラミングにおける振舞いを身につけるための支援ソフトを開発する．

!!開発環境の現状
!!!Github
GitHubは，コンピュータープログラムの元となるソースコードをインターネット上で管理するためのサービスである.複数人が携わるソフトウェア開発において,ソースコードの共有や，バージョン管理といった作業は必要不可欠となる.
またGitHubは，ソースコードを始めとするプログラム開発に必要なファイルやそれらの変更履歴等を保存する「リポジトリ」と呼ばれる場所があり，ソースコード等のバージョンを管理する機能の他，プログラム開発等に対する開発者間でのレビューやコメント機能，プログラム開発の進捗を管理する機能等が備わっている.
本研究ではGithubを使用し，進捗状況の管理や指導者からの添削をより容易できるようにする[2].

!!!TDD (Test Driven Development)
2000年代初期に開発手法として確立された「テスト駆動開発」（Test Driven Development）は,その後10年もの間で普及が進み,今や珍しくない開発スタイルの1つとなっている.
国内でも「アジャイルアカデミー」「TDD Boot Camp」などによる推進・普及活動が各地で活発化し,認知が広がっている[3].


テスト駆動開発は,簡単に言うとプログラムを書く前にテストコードを書くということです.プログラムが完成した後 にテストコードを書くのではなく,テストコードを先に書くことに大きな意味があります.
それは先に仕様を決め,テストコードを書くことによって自分が次にやることが明確になるためです.これにより作業効率も上がります.最初にいきなりプログラムを書くと,整理されていないプログラムが出来てしまいます.
しかしはじめにテストコードを書くことによって何をすべきか明確になるのでプログラムが書きやすくなります.他にTDDの目的としては,軽快なフィードバックの確保,きれいで動くコードの確保などによる開発の改善が挙げられます.
テスト駆動開発は, テストファーストによる追加・変更とリファクタリングによる設計改善という2つの活動で構成されます. 継続的にユニットテストを使って設計検討やチェック, リファクタリングを行うことにより, テスタビリティに優れバグの少ないソースコードを実現することができます. 
